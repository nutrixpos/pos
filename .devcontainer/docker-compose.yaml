services:

  posui:
    build:
      context: https://github.com/nutrixpos/posui.git#v0.0.5
      dockerfile: Dockerfile
      args:
        VUE_APP_ZITADEL_ISSUER: ${VUE_APP_ZITADEL_ISSUER}
        VUE_APP_BACKEND_HOST: ${VUE_APP_BACKEND_HOST}
        VUE_APP_MODULE_CORE_API_PREFIX: ${VUE_APP_MODULE_CORE_API_PREFIX}
        VUE_APP_ZITADEL_PROJECT_RESOURCE_ID: ${VUE_APP_ZITADEL_PROJECT_RESOURCE_ID}
        VUE_APP_ZITADEL_CLIENT_ID: ${VUE_APP_ZITADEL_CLIENT_ID}

    ports:
      - "3000:80"

    # depends_on:
    #   - pos
      

  # pos:
  #   build:
  #     context: ..
  #     dockerfile: ./.devcontainer/Dockerfile  # Specify the Dockerfile if it's not named 'Dockerfile'
  #   ports:
  #     - 8000:8000  # Map ports accordingly
  #     - 4000:4000
  #   environment:
  #     - DATABASES_0_HOST=nutrix-db  # Set any necessary environment variables
  #     - DATABASES_0_DATABASE=nutrix
  #     - ZITADEL_DOMAIN=zitadel
  #     - ZITADEL_PORT=8080
  #   depends_on:
  #     nutrix-db:
  #       condition: service_healthy
  #       restart: true
  #     zitadel:
  #       condition: service_started
  #       restart: true

  nutrix-db:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=
      - MONGO_INITDB_ROOT_PASSWORD=
      - MONGO_INITDB_DATABASE=nutrix
    volumes:
      - ./data/mongo:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'

    ports:
      - "27017:27017"

  zitadel:
    restart: 'always'
    image: 'ghcr.io/zitadel/zitadel:v2.67.1'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      - 'ZITADEL_DATABASE_POSTGRES_HOST=zitadel-db'
      - 'ZITADEL_DATABASE_POSTGRES_PORT=5432'
      - 'ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel'
      - 'ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel'
      - 'ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zitadel'
      - 'ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=postgres'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=postgres'
      - 'ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable'
      - 'ZITADEL_EXTERNALSECURE=false'
      - 'ZITADEL_EXTERNALDOMAIN=zitadel'
      - 'ZITADEL_EXTERNALPORT=8080'
    depends_on:
      zitadel-db:
        condition: 'service_healthy'

    ports:
      - "8080:8080"

    expose:
      - 8080

  zitadel-db:
    restart: 'always'
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=zitadel
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
