name: GitHub Actions Demo
run-name: Packaging a new nutrixpos version ðŸš€
on:
  push:
    tags: 
      - "v*.*.*"

# required to create releases
permissions:
  contents: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend
        env:
          NODE_OPTIONS: --max_old_space_size=2048
        run: npm run build-only
        working-directory: ./frontend

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./frontend/dist

      - name: Build golang app
        env:
          NODE_OPTIONS: --max_old_space_size=2048
        run: export GOOS=windows; go build -o nutrixpos64.exe .
        working-directory: ./

      - name: Upload backend windows64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-windows64
          path: ./nutrixpos64.exe

  
  package-windows:
    runs-on: windows-latest
    needs: ci
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: create nsis-runtime directory
        run: |
            # Create directory if it doesn't exist
            if (!(Test-Path -Path "./nsis-runtime")) {
              New-Item -ItemType Directory -Path "./nsis-runtime" -Force
            }

      - name: Download earlier artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./nsis-runtime
      
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-windows64
          path: ./nsis-runtime/frontend
      
      - name: Install NSIS using Chocolatey
        run: choco install nsis -y

      - name: Download required files to nsis-runtime
        run: |

          dir
          cd .\nsis-runtime
          dir
          
          # Download files using PowerShell
          Invoke-WebRequest -Uri "https://elmawardy.sirv.com/nutrix-icon-0.ico" -OutFile "./nsis-runtime/icon.ico"
          Invoke-WebRequest -Uri "https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-8.2.1-signed.msi" -OutFile "./nsis-runtime/mongodb-windows-x86_64-8.2.1-signed.msi"
          Invoke-WebRequest -Uri "https://nssm.cc/ci/nssm-2.24-101-g897c7ad.zip" -OutFile "./nsis-runtime/nssm-2.24-101-g897c7ad.zip"
          
          # Extract zip file
          Expand-Archive -Path "./nsis-runtime/nssm-2.24-101-g897c7ad.zip" -DestinationPath "./nsis-runtime/nssm-temp" -Force
          
          # Copy nssm.exe
          Copy-Item -Path "./nsis-runtime/nssm-temp/nssm-2.24-101-g897c7ad/win64/nssm.exe" -Destination "./nsis-runtime/nssm.exe" -Force

          Copy-Item -Path "./package.nsi" -Destination "./nsis-runtime/package.nsi" -Force
          Copy-Item -Path "./LICENSE" -Destination "./nsis-runtime/license.txt" -Force
          Copy-Item -Path "./config.example.yaml" -Destination "./nsis-runtime/config.yaml" -Force
          (Get-Content ./nsis-runtime/package.nsi) -replace 'nutrixpos-installer\.msi', "nutrixpos-${{github.ref_name}}-windows64.msi" | Set-Content ./nsis-runtime/package.nsi

          dir
          
          & "C:\Program Files (x86)\NSIS\makensis.exe" ./package.nsi

      - name: Create Release and Upload MSI
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: ./nsis-runtime/nutrixpos-${{github.ref_name}}-windows64.msi
